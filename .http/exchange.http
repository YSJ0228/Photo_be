### 0. 로그인 
POST http://localhost:5005/auth/signin
Content-Type: application/json

{
  "email": "user2@example.com",
  "password": "1234"
}

###

@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIyLCJpYXQiOjE3NDg5MjM1OTAsImV4cCI6MTc0ODkyNzE5MH0.LSdrlEeUsOV2M7nOyMX6xS30dcJOkMO05eJHac8-biM


### 1. 교환 제안 목록 조회 (판매자가 본인 카드에 온 제안들 확인)
GET http://localhost:5005/api/exchange/87
Authorization: Bearer {{accessToken}}

### 2. 교환 요청 생성 (구매자가 판매자의 카드에 교환 제안) 
POST http://localhost:5005/api/exchange/111
Authorization: Bearer 
Content-Type: application/json

{
  "requestCardId": 273,
  "description": "교환하고 싶습니다. 제 카드 상태는 매우 좋습니다."
}

### 3. 교환 요청 승인 (판매자가 교환 요청을 승인)
PATCH http://localhost:5005/api/exchange/62/status
Authorization: Bearer 
Content-Type: application/json

{
  "status": "ACCEPTED"
}

### 4. 교환 요청 거절 (판매자가 교환 요청을 거절) 
PATCH http://localhost:5005/api/exchange/67/status
Authorization: Bearer 
Content-Type: application/json

{
  "status": "REJECTED"
}

### 5. 교환 요청 취소 (구매자가 자신의 교환 요청을 취소)
DELETE http://localhost:5005/api/exchange/68
Authorization: Bearer 

### 6. 거절된 교환 요청 다시 시도 (구매자가 거절된 카드로 다시 교환 요청)
POST http://localhost:5005/api/exchange/111
Authorization: Bearer 
Content-Type: application/json

{
  "requestCardId": 273,
  "description": "이전에 거절되었던 카드로 다시 교환 요청합니다."
}


### 7. 내가 보낸 교환 요청 목록 조회 (페이지네이션)
GET http://localhost:5005/api/exchange/my?page=1&limit=5
Authorization: Bearer 

### 8. 특정 상품에 대한 교환 요청 목록 조회
GET http://localhost:5005/api/exchange/my?shopListingId=111
Authorization: Bearer 
### 9. 특정 상품의 특정 상태 교환 요청 목록 조회
GET http://localhost:5005/api/exchange/my?shopListingId=111&status=REQUESTED
Authorization: Bearer 
